(*
ğŸ‘‰ Ici, plusieurs fonctions sâ€™appellent mutuellement.
â†’ La fonction A appelle la fonction B, et la fonction B appelle la fonction A.

let rec f1 x = ... f2 ...    (* f1 appelle f2 *)
and f2 y = ... f1 ...        (* f2 appelle f1 *)

ğŸ‘‰ La rÃ©cursion mutuelle est utile quand tu as :
plusieurs "Ã©tats" ou "rÃ´les" qui se passent la main
plusieurs types de nÅ“uds dans une grammaire
analyse de structures alternantes
Exemples :
  Pair / impair (exemple simple)
  Lecture de grammaires (parseurs)
  Machines Ã  Ã©tats
*)
let rec est_pair n =
  if n = 0 then true
  else est_impair (n - 1)

and est_impair n =
  if n = 0 then false
  else est_pair (n - 1);;

print_endline (string_of_bool (est_pair 6));;